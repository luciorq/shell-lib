#!/usr/bin/env bash

# Do NOT modify this file manually.
# Change source code at: https://github.com/luciorq/shell-lib
# Author: Lucio Rezende Queiroz
# License: MIT

\builtin trap '\builtin echo "Exit status ${?} at line ${LINENO} from: ${BASH_COMMAND}"' ERR

\builtin set -o errexit;    # abort on nonzero exitstatus
\builtin set -o nounset;    # abort on unbound variable
\builtin set -o pipefail;   # do not hide errors within pipes

[[ "${BASH_VERSINFO[0]}" -lt 4 ]] && { \builtin echo >&2 "Error: Bash >=4 required"; \builtin exit 1; }

function create_temp ()
{
    local suff_str exec_cmd mktemp_bin;
    local usage="create_temp <SUFFIX>";
    if [[ $1 == -h ]]; then
        builtin echo -ne "${usage}\n";
    fi;
    suff_str='';
    mktemp_bin="$(which_bin 'mktemp')";
    exec_cmd="${mktemp_bin} -d -t 'tmp.XXXXXXXXX'";
    if [[ ! "$1" == "" ]]; then
        suff_str=" --suffix \"-$1\"";
        exec_cmd="${exec_cmd} ${suff_str}";
    fi;
    builtin eval "${exec_cmd}"
}

function which_bin ()
{
    \builtin local cmd_arg;
    \builtin local path_dir_arr;
    \builtin local path_dir;
    \builtin local file_name;
    \builtin local cmd_bin;
    cmd_arg="${1:-}";
    cmd_bin='';
    IFS=: \builtin read -r -a path_dir_arr <<< "${PATH:-}";
    for path_dir in "${path_dir_arr[@]}";
    do
        file_name="${path_dir}/${cmd_arg}";
        if [[ -x "${file_name}" && ! -d "${file_name}" ]] && [[ "${file_name}" =~ ${cmd_arg}$ ]]; then
            cmd_bin="${file_name}";
            \builtin break;
        fi;
    done;
    \builtin echo -ne "${cmd_bin}";
    \builtin return 0
}

function main () {
    create_temp "${@:-}";
    \builtin return;
}

main "${@:-}";
\builtin exit;
