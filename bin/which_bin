#!/usr/bin/env bash

# Do NOT modify this file manually.
# Change source code at: https://github.com/luciorq/shell-lib
# Author: Lucio Rezende Queiroz
# License: MIT

\builtin set -o errexit;    # abort on nonzero exitstatus
\builtin set -o nounset;    # abort on unbound variable
\builtin set -o pipefail;   # don't hide errors within pipes

[[ "${BASH_VERSINFO[0]}" -lt 4 ]] && { \builtin echo >&2 "Error: Bash >=4 required"; \builtin exit 1; }

which_bin () 
{ 
    \builtin local cmd_arg;
    \builtin local cmd_arr;
    \builtin local cmd_bin;
    \builtin local which_arr;
    \builtin local which_bin_str;
    cmd_arg="${1:-}";
    cmd_arr='';
    which_arr='';
    \builtin mapfile -t which_arr < <(\builtin command which -a 'which' 2> /dev/null || \builtin echo -ne '');
    which_bin_str="${which_arr[0]}";
    if [[ -z ${which_bin_str} ]]; then
        \builtin mapfile -t cmd_arr < <(\builtin command -v "${cmd_arg}" 2> /dev/null || \builtin echo -ne '');
    else
        \builtin mapfile -t cmd_arr < <("${which_bin_str}" -a "${cmd_arg}" 2> /dev/null || \builtin echo -ne '');
    fi;
    cmd_bin="${cmd_arr[0]:-}";
    \builtin echo -ne "${cmd_bin}";
    \builtin exit 0
}

function main () {
    which_bin "${@}";
\builtin exit 0;
}

main "${@}";
\builtin exit 0;

