#!/usr/bin/env bash

# Do NOT modify this file manually.
# Change source code at: https://github.com/luciorq/shell-lib
# Author: Lucio Rezende Queiroz
# License: MIT

\builtin trap '\builtin echo "Exit status ${?} at line ${LINENO} from: ${BASH_COMMAND}"' ERR

\builtin set -o errexit;    # abort on nonzero exitstatus
\builtin set -o nounset;    # abort on unbound variable
\builtin set -o pipefail;   # do not hide errors within pipes

[[ "${BASH_VERSINFO[0]}" -lt 4 ]] && { \builtin echo >&2 "Error: Bash >=4 required"; \builtin exit 1; }

function cd_fun ()
{
    \builtin local zoxide_bin;
    zoxide_bin="$(which_bin 'zoxide')";
    if [[ -n ${zoxide_bin} ]] && [[ $(LC_ALL=C \builtin type -t z) != function ]] && [[ "${SHELL:-}" =~ bash$ ]]; then
        \builtin eval "$("${zoxide_bin}" init bash)";
    fi;
    if [[ -n ${zoxide_bin} ]] && [[ $(LC_ALL=C \builtin type -t z) == function ]]; then
        z "${@}";
    else
        \builtin cd -- "${@}" || \builtin exit 1;
    fi;
    \builtin return 0
}

function which_bin ()
{
    \builtin local cmd_arg;
    \builtin local path_dir_arr;
    \builtin local path_dir;
    \builtin local file_name;
    \builtin local cmd_bin;
    cmd_arg="${1:-}";
    cmd_bin='';
    IFS=: \builtin read -r -a path_dir_arr <<< "${PATH:-}";
    for path_dir in "${path_dir_arr[@]}";
    do
        file_name="${path_dir}/${cmd_arg}";
        if [[ -x "${file_name}" && ! -d "${file_name}" ]] && [[ "${file_name}" =~ ${cmd_arg}$ ]]; then
            cmd_bin="${file_name}";
            \builtin break;
        fi;
    done;
    \builtin echo -ne "${cmd_bin}";
    \builtin return 0
}

function main () {
    cd_fun "${@:-}";
    \builtin return;
}

main "${@:-}";
\builtin exit;
