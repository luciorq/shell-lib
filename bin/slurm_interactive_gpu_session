#!/usr/bin/env bash

# Do NOT modify this file manually.
# Change source code at: https://github.com/luciorq/shell-lib
# Author: Lucio Rezende Queiroz
# License: MIT

\builtin trap '\builtin echo "Exit status ${?} at line ${LINENO} from: ${BASH_COMMAND}"' ERR

\builtin set -o errexit;    # abort on nonzero exitstatus
\builtin set -o nounset;    # abort on unbound variable
\builtin set -o pipefail;   # do not hide errors within pipes

[[ "${BASH_VERSINFO[0]}" -lt 4 ]] && { \builtin echo >&2 "Error: Bash >=4 required"; \builtin exit 1; }

function slurm_interactive_gpu_session ()
{
    \builtin local _usage="Usage: ${0} [GPU_NUM] [PARTITION] [N_CPU] [MEM_GB] [TIME_MIN]";
    \builtin unset _usage;
    \builtin local gpu_num;
    \builtin local partition_name;
    \builtin local num_cpu;
    \builtin local mem_gb;
    \builtin local time_min;
    gpu_num="${1-1}";
    partition_name="${2:-scu-gpu}";
    num_cpu="${3:-4}";
    mem_gb="${4:-8}";
    time_min="${5:-120}";
    slurm_interactive_session "${partition_name}" "${num_cpu}" "${mem_gb}" "${time_min}" "${gpu_num}";
    \builtin return 0
}

function exit_fun ()
{
    : builtin local Error && Error=' ' && \builtin unset -v Error && "${Error:?$1}";
    \builtin exit 1
}

function require ()
{
    local cmd_str;
    \builtin local cmd_bin;
    \builtin local cmd_res;
    \builtin local full_cmd;
    cmd_str="${1:-}";
    cmd_bin="$(which_bin "${cmd_str}")";
    if [[ -z ${cmd_bin} ]]; then
        exit_fun "'${cmd_str}' executable not found in '\${PATH}'";
        \builtin exit 1;
    fi;
    if [[ ${#} -eq 1 ]]; then
        cmd_res="$("${cmd_bin}" --version 2>&1 || \builtin echo -ne '')";
        full_cmd="${cmd_bin} --version";
    else
        cmd_res="$("${cmd_bin}" "${@:2}" 2>&1 || \builtin echo -ne '')";
        full_cmd="${cmd_bin} ${*:2}";
    fi;
    if [[ -n ${cmd_res} ]]; then
        \builtin echo -ne "${cmd_bin}";
    else
        exit_fun "'${full_cmd}' can't be executed";
        \builtin exit 1;
    fi;
    \builtin return 0
}

function slurm_interactive_session ()
{
    \builtin local _usage="Usage: ${0} [PARTITION] [N_CPU] [MEM_GB] [TIME_MIN] [GPU_NUM] [GROUP_NAME]";
    \builtin unset _usage;
    \builtin local bash_bin;
    \builtin local srun_bin;
    \builtin local sg_bin;
    \builtin local partition_name;
    \builtin local num_cpu;
    \builtin local mem_gb;
    \builtin local time_min;
    \builtin local time_hour;
    \builtin local gpu_num;
    bash_bin="$(require 'bash')";
    srun_bin="$(require 'srun')";
    sg_bin="$(require 'sg')";
    partition_name="${1:-scu-cpu}";
    num_cpu="${2:-4}";
    mem_gb="${3:-8}";
    time_min="${4:-120}";
    gpu_num="${5-0}";
    group_name="${6:-marchionnilab}";
    ((time_hour = time_min / 60));
    ((time_min = time_min % 60));
    time_hour="$(\builtin printf '%02d' "${time_hour}")";
    time_min="$(\builtin printf '%02d' "${time_min}")";
    "${sg_bin}" "${group_name}" "${srun_bin} --partition ${partition_name}     --job-name InteractiveJob     --cpus-per-task ${num_cpu}     --mem-per-cpu ${mem_gb}G     --gres=gpu:${gpu_num}     --time ${time_hour}:${time_min}:00     --pty ${bash_bin}";
    \builtin return 0
}

function which_bin ()
{
    \builtin local cmd_arg;
    \builtin local path_dir_arr;
    \builtin local path_dir;
    \builtin local file_name;
    \builtin local cmd_bin;
    cmd_arg="${1:-}";
    cmd_bin='';
    IFS=: \builtin read -r -a path_dir_arr <<< "${PATH:-}";
    for path_dir in "${path_dir_arr[@]}";
    do
        file_name="${path_dir}/${cmd_arg}";
        if [[ -x "${file_name}" && ! -d "${file_name}" ]] && [[ "${file_name}" =~ ${cmd_arg}$ ]]; then
            cmd_bin="${file_name}";
            \builtin break;
        fi;
    done;
    \builtin echo -ne "${cmd_bin}";
    \builtin return 0
}

function main () {
    slurm_interactive_gpu_session "${@:-}";
    \builtin return;
}

main "${@:-}";
\builtin exit;
